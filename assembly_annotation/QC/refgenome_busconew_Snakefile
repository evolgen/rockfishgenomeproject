#!python

#!/usr/bin/env python3
import os
import sys
from glob import glob
from snakemake.utils import read_job_properties
import pdb

configfile: "/global/scratch2/Rockfish/Genomes/FREEZE/config.freeze.json"
work_dir = "/global/scratch2/Rockfish/Genomes/FREEZE"

def get_inputs(wildcards):
    inputs = []
    pattern = "{work_dir}/{assembler}/{species}/BUSCO_NEW/vertebrates.done"
    for s in config["SAMPLES"]:
        assembler, species = s.split("/")
        inputs.append(pattern.format(species=species, assembler=assembler, work_dir=work_dir))
    return inputs

rule all: 
   input: 
        get_inputs

rule busco_4_assembly:
   input:
      asmb="{work_dir}/{assembler}/{species}/referencegenome.fasta",
   output:
      busco_out="{work_dir}/{assembler}/{species}/BUSCO_NEW/vertebrates.done",
   params:
      slurm_opts=lambda wildcards: "-N 1 " \
                           "--time 0-5:00:00 " \
                           "-A co_genomicdata --qos=savio_lowprio " \
                           "-p savio2_bigmem " \
                           "-o {work_dir}/logs/busconew_{species}.log " \
                           "-J {species}_busco " \
                           .format(species=wildcards.species, assembler=wildcards.assembler, 
                                 work_dir=work_dir)
   threads:
      24
   run:
      shell("""
         cd {work_dir}/{assembler}/{species}/ && mkdir -p ./BUSCO_NEW/ && cd ./BUSCO_NEW/ ;
         cp {asmb} reference.fasta ;
         singularity exec -H $PWD \
             /global/scratch2/Software/buscov5/buscov5.sif busco -m genome \
             -i reference.fasta -o vertebrata --lineage_dataset vertebrata_odb10 \
             -e 1e-6 -c {threads} --datasets_version odb10 -f ;
         rm -fr ./busco_downloads/ ;
         echo {species} > {busco_out} ;
         """.format(asmb = input.asmb,
                  assembler=wildcards.assembler,
                  species=wildcards.species,
                  threads=threads, busco_out=output.busco_out,
                  work_dir = work_dir))

