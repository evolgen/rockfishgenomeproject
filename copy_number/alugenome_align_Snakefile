#!python

#!/usr/bin/env python3
import os
import sys
from glob import glob
from snakemake.utils import read_job_properties
import pdb

configfile:"config.itemized.withpball.withillumina.json"
genome_dir = "/global/scratch2/rohitkolora/Rockfish/Genomes/FREEZE"
out_dir = "/global/scratch/gregoryowens/sebastes/snp_calling"
bam_dir = "/global/scratch2/rohitkolora/Rockfish/Data/Greg/snp_calling"


def get_inputs(wildcards):
    inputs = []
    pattern = "{bam_dir}/aleutianus_genome/{species1}/Illumina/map.{species1}.{sample1}.depth.gz"
    for smp in config["SAMPLES"]:
        species1, sample1 = smp.split("/")
#       if species1 != "Sebastes_aleutianus":
        if "Sebastes_" in species1:
             inputs.append(pattern.format(species1=species1, 
             smp=smp,  sample1=sample1, bam_dir=bam_dir))

    return inputs

rule all:
    input:
        get_inputs

rule ilmn_map:
    input:
        reference="/global/scratch2/rohitkolora/Rockfish/Data/Greg/snp_calling/aleutianus_scaffolded/Sebastes_aleutianus/referencegenome.fasta",
        query_R1="/global/scratch2/rohitkolora/Rockfish/Genomes/sequencing/illumina/output/{species1}/{sample1}/assembly/masurca/illumina_R1.fastq.gz",
        query_R2="/global/scratch2/rohitkolora/Rockfish/Genomes/sequencing/illumina/output/{species1}/{sample1}/assembly/masurca/illumina_R2.fastq.gz",
    output:
        sam="{bam_dir}/aleutianus_genome/{species1}/Illumina/map.{species1}.{sample1}.bam.sam",
        status="{bam_dir}/aleutianus_genome/{species1}/Illumina/map.{species1}.{sample1}.bam.status",
    params:
        slurm_opts=lambda wildcards: "-N1 " \
                                     "--time 3-00:00:00 " \
                                    "-A co_genomicdata " \
                                     "--qos=savio_lowprio " \
                                     "-p savio,savio2 " \
                                     "-o {out_dir}/logs/ngmmap_{sample1}.log " \
                                     "-J {sp1} " \
                                     .format(sp1=wildcards.species1, out_dir=out_dir,sample1=wildcards.sample1)
    run:
        shell("""
            /global/scratch/gregoryowens/sebastes/bin/NextGenMap-0.5.5/bin/ngm-0.5.5/ngm \
                -t 20  -r {reference} -1 {query_R1} -2 {query_R2} -p -o {sam} ;
            echo "done" > {status};
            """.format(out_dir=out_dir, sam=output.sam, status=output.status, 
                       reference=input.reference, query_R1=input.query_R1, query_R2=input.query_R2, #pb2=wildcards.pb2, 
                       species1=wildcards.species1, bam_dir=bam_dir))

rule ilmn_sort:
    input:
        reference="/global/scratch2/rohitkolora/Rockfish/Data/Greg/snp_calling/aleutianus_scaffolded/Sebastes_aleutianus/referencegenome.fasta",
        status="{bam_dir}/aleutianus_genome/{species1}/Illumina/map.{species1}.{sample1}.bam.status",
    output:
        bam="{bam_dir}/aleutianus_genome/{species1}/Illumina/map.{species1}.{sample1}.bam",
        bai="{bam_dir}/aleutianus_genome/{species1}/Illumina/map.{species1}.{sample1}.bam.bai"
    params:
        slurm_opts=lambda wildcards: "-N1 " \
                                     "--time 3-00:00:00 " \
                                    "-A co_genomicdata " \
                                     "--qos=savio_lowprio " \
                                     "-p savio2,savio " \
                                     "-o {out_dir}/logs/sort_{sample1}.log " \
                                     "-J {sp1} " \
                                     .format(sp1=wildcards.species1, out_dir=out_dir,sample1=wildcards.sample1)
    run:
        shell("""
            #!/bin/sh;
            module load samtools;
            samtools sort -@ 20 -T {bam_dir}/tmp \
                -o {bam} {bam}.sam ;
            samtools index -@ 20 {bam} ;rm -f {bam}.sam;
            """.format(out_dir=out_dir, bam=output.bam,
                       reference=input.reference, 
                       species1=wildcards.species1, genome_dir=genome_dir, bam_dir=bam_dir))

rule calc_depth:
    input:
        bam="{bam_dir}/aleutianus_genome/{species1}/Illumina/map.{species1}.{sample1}.bam",
        bai="{bam_dir}/aleutianus_genome/{species1}/Illumina/map.{species1}.{sample1}.bam.bai"
    output:
        depth="{bam_dir}/aleutianus_genome/{species1}/Illumina/map.{species1}.{sample1}.depth.gz",
    params:
        slurm_opts=lambda wildcards: "-N1 " \
                                     "--time 3-00:00:00 " \
                                    "-A co_genomicdata " \
                                     "--qos=savio_lowprio " \
                                     "-p savio2,savio " \
                                     "-o {out_dir}/logs/depth_{sample1}.log " \
                                     "-J {sp1} " \
                                     .format(sp1=wildcards.species1, out_dir=out_dir,sample1=wildcards.sample1)
    run:
        shell("""
            #!/bin/sh;
            module load samtools;
            samtools bedcov /global/scratch2/rohitkolora/Rockfish/Data/Greg/snp_calling/aleutianus_genome/Final_filt_BRK_Sebastes_aleutianus.genes.bed {bam} |gzip > {depth};
            """.format(out_dir=out_dir, bam=input.bam, depth=output.depth,))
