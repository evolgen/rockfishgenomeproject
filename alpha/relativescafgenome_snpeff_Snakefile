#!python

#!/usr/bin/env python3
import os
import sys
from glob import glob
from snakemake.utils import read_job_properties
import pdb

configfile:"config.itemized.withpball.withillumina.json"
genome_dir = "/global/scratch2/rohitkolora/Rockfish/Genomes/FREEZE"
out_dir = "/global/scratch/gregoryowens/sebastes/snp_calling"
bam_dir = "/global/scratch2/rohitkolora/Rockfish/Data/Greg/snp_calling"


def get_inputs(wildcards):
    inputs = []
    reference_pattern ="/global/scratch/gregoryowens/bin/snpEff/data/{reference_species}.{species1}/snpEffectPredictor.bin"
#    reference_pattern ="/global/scratch/gregoryowens/bin/snpEff/data/{reference_species}.{species1}/genes.gff"
    bai_pattern = "/global/scratch2/rohitkolora/Rockfish/Data/Greg/snp_calling/{reference_species}_scaffolded/{species1}/Illumina/map.{species1}.{sample1}.bam.bai"
    for smp in config["SAMPLES"]:
        species1, sample1 = smp.split("/")
        fn = "species_scaffold_list.txt"
        index_file=open(fn,"r")
        lines=index_file.readlines()
        for line in lines:
            species=line.split('\t')[0]
            sample=line.split('\t')[1]
            reference_full=line.split('\t')[2]
            reference_species = reference_full.split('_')[1].rstrip()
            if sample1 == sample:
                inputs.append(reference_pattern.format(species1=species1,
                     sample1=sample1, bam_dir=bam_dir, reference_species=reference_species,))
#                inputs.append(bai_pattern.format(species1=species1,
#                     sample1=sample1, bam_dir=bam_dir, reference_species=reference_species,))

    return inputs

rule all:
    input:
        get_inputs


rule snpeff_ref:
    input:
    output:
        reference="/global/scratch/gregoryowens/bin/snpEff/data/{reference_species}.{species1}/sequences.fa",
        protein="/global/scratch/gregoryowens/bin/snpEff/data/{reference_species}.{species1}/protein.fa",
        genes="/global/scratch/gregoryowens/bin/snpEff/data/{reference_species}.{species1}/genes.gff",
        output="/global/scratch/gregoryowens/bin/snpEff/data/{reference_species}.{species1}/snpEffectPredictor.bin",
    params:
        slurm_opts=lambda wildcards: "-N1 " \
                                     "--time 02:00:00 " \
                                    "-A co_genomicdata " \
                                     "--qos=savio_lowprio " \
                                     "-p savio3_bigmem " \
                                     "-o {out_dir}/logs/prep_snpeff_{sp1}.log " \
                                     "-J {sp1} " \
                                     .format(sp1=wildcards.species1, out_dir=out_dir)
    run:
        shell("""
            mkdir -p /global/scratch/gregoryowens/bin/snpEff/data/{reference_species}.{species1}; 
            if [ {species1} == "Sebastes_ruberrimus" ]
            then
               ln -s -f /global/scratch2/rohitkolora/Rockfish/Genomes/FREEZE/*/*_{reference_species}/RagTag/{species1}/*/ragtag_output/ragtag.scaffolds.fasta {reference};
            elif [ {species1} == "Sebastes_schlegelii" ]
            then
               ln -s -f /global/scratch2/rohitkolora/Rockfish/Genomes/FREEZE/*/*_{reference_species}/RagTag/{species1}/*/ragtag_output/ragtag.scaffolds.fasta {reference};
            elif [ -f /global/scratch2/rohitkolora/Rockfish/Genomes/FREEZE/*/{species1}/referencegenome.fasta ]
            then
                ln -s -f  /global/scratch2/rohitkolora/Rockfish/Genomes/FREEZE/*/{species1}/referencegenome.fasta {reference} ;
            else
                ln -s -f /global/scratch2/rohitkolora/Rockfish/Genomes/FREEZE/*/*_{reference_species}/RagTag/{species1}/*/ragtag_output/ragtag.scaffolds.fasta {reference};
            fi
            if [[ "{species1}" == *"{reference_species}"* ]]
            then
                cat /global/scratch2/rohitkolora/Rockfish/Genomes/annotation/All_lifted_large/{species1}/{species1}.gff3 | grep {species1}.FUN_ | sed s/^{species1}.//g > {genes};
            else
                cat /global/scratch2/rohitkolora/Rockfish/Genomes/annotation/All_lifted_large/{species1}/{species1}.gff3 | grep {species1}.FUN_ > {genes};
            fi 
            ln -s -f /global/scratch2/rohitkolora/Rockfish/Genomes/annotation/All_lifted_large/{species1}/{species1}.faa {protein};
            cat <(cat /global/scratch/gregoryowens/bin/snpEff/snpEff.config  | grep -v {species1})  <(echo "{reference_species}.{species1}.genome : {species1} scaffolded against {reference_species}.") > /global/scratch/gregoryowens/bin/snpEff/snpEff.config.tmp; mv /global/scratch/gregoryowens/bin/snpEff/snpEff.config.tmp /global/scratch/gregoryowens/bin/snpEff/snpEff.config;
            module load java;
            cd /global/scratch/gregoryowens/bin/snpEff/;
            java -jar /global/scratch/gregoryowens/bin/snpEff/snpEff.jar build -gff3 -v {reference_species}.{species1}; 
           """.format(
                       reference_species=wildcards.reference_species,
                       reference=output.reference, protein=output.protein, genes=output.genes,
                       species1=wildcards.species1, ))


